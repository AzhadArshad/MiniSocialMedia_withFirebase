{"ast":null,"code":"import _objectSpread from\"/Users/azhadarshad/Desktop/PROJECTS/social_media_with_firebase/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useForm}from\"react-hook-form\";import*as yup from\"yup\";import{yupResolver}from\"@hookform/resolvers/yup\";import{addDoc,collection}from\"firebase/firestore\";import{auth,db}from\"../../config/firebase\";import{useAuthState}from\"react-firebase-hooks/auth\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const CreateForm=()=>{var _errors$title,_errors$description;const[user]=useAuthState(auth);const navigate=useNavigate();const schema=yup.object().shape({title:yup.string().required(\"You must add a title\"),description:yup.string().required(\"You must add a description\")});const{register,handleSubmit,formState:{errors},reset}=useForm({resolver:yupResolver(schema)});const postRef=collection(db,\"posts\");const onCreatePost=async data=>{await addDoc(postRef,_objectSpread(_objectSpread({},data),{},{//this equals -->\n//title: data.title,\n//description: data.description,\nusername:user===null||user===void 0?void 0:user.displayName,userId:user===null||user===void 0?void 0:user.uid}));reset();navigate(\"/\");};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onCreatePost),children:[/*#__PURE__*/_jsx(\"input\",_objectSpread({placeholder:\"Title..\"},register(\"title\"))),/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:(_errors$title=errors.title)===null||_errors$title===void 0?void 0:_errors$title.message}),/*#__PURE__*/_jsx(\"textarea\",_objectSpread({placeholder:\"Description..\"},register(\"description\"))),/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:(_errors$description=errors.description)===null||_errors$description===void 0?void 0:_errors$description.message}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\"})]});};","map":{"version":3,"names":["useForm","yup","yupResolver","addDoc","collection","auth","db","useAuthState","useNavigate","jsx","_jsx","jsxs","_jsxs","CreateForm","_errors$title","_errors$description","user","navigate","schema","object","shape","title","string","required","description","register","handleSubmit","formState","errors","reset","resolver","postRef","onCreatePost","data","_objectSpread","username","displayName","userId","uid","onSubmit","children","placeholder","style","color","message","type"],"sources":["/Users/azhadarshad/Desktop/PROJECTS/social_media_with_firebase/src/pages/create-post/CreateForm.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { auth, db } from \"../../config/firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface CreateFormData {\n  title: string;\n  description: string;\n}\nexport const CreateForm = () => {\n  const [user] = useAuthState(auth);\n  const navigate = useNavigate();\n\n  const schema = yup.object().shape({\n    title: yup.string().required(\"You must add a title\"),\n    description: yup.string().required(\"You must add a description\"),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm<CreateFormData>({\n    resolver: yupResolver(schema),\n  });\n\n  const postRef = collection(db, \"posts\");\n  const onCreatePost = async (data: CreateFormData) => {\n    await addDoc(postRef, {\n      ...data, //this equals -->\n      //title: data.title,\n      //description: data.description,\n      username: user?.displayName,\n      userId: user?.uid,\n    });\n    reset();\n    navigate(\"/\");\n  };\n  return (\n    <form onSubmit={handleSubmit(onCreatePost)}>\n      <input placeholder=\"Title..\" {...register(\"title\")} />\n      <p style={{ color: \"red\" }}>{errors.title?.message}</p>\n      <textarea placeholder=\"Description..\" {...register(\"description\")} />\n      <p style={{ color: \"red\" }}>{errors.description?.message}</p>\n      <input type=\"submit\" />\n    </form>\n  );\n};\n"],"mappings":"mJAAA,OAASA,OAAO,KAAQ,iBAAiB,CACzC,MAAO,GAAK,CAAAC,GAAG,KAAM,KAAK,CAC1B,OAASC,WAAW,KAAQ,yBAAyB,CACrD,OAASC,MAAM,CAAEC,UAAU,KAAQ,oBAAoB,CACvD,OAASC,IAAI,CAAEC,EAAE,KAAQ,uBAAuB,CAChD,OAASC,YAAY,KAAQ,2BAA2B,CACxD,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAM/C,MAAO,MAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,KAAAC,aAAA,CAAAC,mBAAA,CAC9B,KAAM,CAACC,IAAI,CAAC,CAAGT,YAAY,CAACF,IAAI,CAAC,CACjC,KAAM,CAAAY,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAU,MAAM,CAAGjB,GAAG,CAACkB,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC,CAChCC,KAAK,CAAEpB,GAAG,CAACqB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,sBAAsB,CAAC,CACpDC,WAAW,CAAEvB,GAAG,CAACqB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,4BAA4B,CACjE,CAAC,CAAC,CAEF,KAAM,CACJE,QAAQ,CACRC,YAAY,CACZC,SAAS,CAAE,CAAEC,MAAO,CAAC,CACrBC,KACF,CAAC,CAAG7B,OAAO,CAAiB,CAC1B8B,QAAQ,CAAE5B,WAAW,CAACgB,MAAM,CAC9B,CAAC,CAAC,CAEF,KAAM,CAAAa,OAAO,CAAG3B,UAAU,CAACE,EAAE,CAAE,OAAO,CAAC,CACvC,KAAM,CAAA0B,YAAY,CAAG,KAAO,CAAAC,IAAoB,EAAK,CACnD,KAAM,CAAA9B,MAAM,CAAC4B,OAAO,CAAAG,aAAA,CAAAA,aAAA,IACfD,IAAI,MAAE;AACT;AACA;AACAE,QAAQ,CAAEnB,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEoB,WAAW,CAC3BC,MAAM,CAAErB,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEsB,GAAG,EAClB,CAAC,CACFT,KAAK,CAAC,CAAC,CACPZ,QAAQ,CAAC,GAAG,CAAC,CACf,CAAC,CACD,mBACEL,KAAA,SAAM2B,QAAQ,CAAEb,YAAY,CAACM,YAAY,CAAE,CAAAQ,QAAA,eACzC9B,IAAA,SAAAwB,aAAA,EAAOO,WAAW,CAAC,SAAS,EAAKhB,QAAQ,CAAC,OAAO,CAAC,CAAG,CAAC,cACtDf,IAAA,MAAGgC,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAH,QAAA,EAAA1B,aAAA,CAAEc,MAAM,CAACP,KAAK,UAAAP,aAAA,iBAAZA,aAAA,CAAc8B,OAAO,CAAI,CAAC,cACvDlC,IAAA,YAAAwB,aAAA,EAAUO,WAAW,CAAC,eAAe,EAAKhB,QAAQ,CAAC,aAAa,CAAC,CAAG,CAAC,cACrEf,IAAA,MAAGgC,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAH,QAAA,EAAAzB,mBAAA,CAAEa,MAAM,CAACJ,WAAW,UAAAT,mBAAA,iBAAlBA,mBAAA,CAAoB6B,OAAO,CAAI,CAAC,cAC7DlC,IAAA,UAAOmC,IAAI,CAAC,QAAQ,CAAE,CAAC,EACnB,CAAC,CAEX,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}