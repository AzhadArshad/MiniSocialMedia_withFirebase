{"ast":null,"code":"import{auth,provider}from\"../config/firebase\";import{signInWithPopup}from\"firebase/auth\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const Login=()=>{const navigate=useNavigate();const signInWithGoogle=async()=>{const result=await signInWithPopup(auth,provider);console.log(result);navigate(\"/\");};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Sign in with Google to Continue\"}),/*#__PURE__*/_jsx(\"button\",{onClick:signInWithGoogle,children:\"Sign in with Google\"})]});};","map":{"version":3,"names":["auth","provider","signInWithPopup","useNavigate","jsx","_jsx","jsxs","_jsxs","Login","navigate","signInWithGoogle","result","console","log","children","onClick"],"sources":["/Users/azhadarshad/Desktop/PROJECTS/social_media_with_firebase/src/pages/login.tsx"],"sourcesContent":["import { auth, provider } from \"../config/firebase\";\nimport { signInWithPopup } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const Login = () => {\n  const navigate = useNavigate();\n  const signInWithGoogle = async () => {\n    const result = await signInWithPopup(auth, provider);\n    console.log(result);\n    navigate(\"/\");\n  };\n  return (\n    <div>\n      <p>Sign in with Google to Continue</p>\n      <button onClick={signInWithGoogle}>Sign in with Google</button>\n    </div>\n  );\n};\n"],"mappings":"AAAA,OAASA,IAAI,CAAEC,QAAQ,KAAQ,oBAAoB,CACnD,OAASC,eAAe,KAAQ,eAAe,CAC/C,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,MAAO,MAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,QAAQ,CAAGN,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAO,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAT,eAAe,CAACF,IAAI,CAAEC,QAAQ,CAAC,CACpDW,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CACnBF,QAAQ,CAAC,GAAG,CAAC,CACf,CAAC,CACD,mBACEF,KAAA,QAAAO,QAAA,eACET,IAAA,MAAAS,QAAA,CAAG,iCAA+B,CAAG,CAAC,cACtCT,IAAA,WAAQU,OAAO,CAAEL,gBAAiB,CAAAI,QAAA,CAAC,qBAAmB,CAAQ,CAAC,EAC5D,CAAC,CAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}